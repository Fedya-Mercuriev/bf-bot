'use strict';

const Telegraf = require('telegraf');
const Extra = require('telegraf/extra');
const session = require('telegraf/session');
const Stage = require('telegraf/stage');
const Scene = require('telegraf/scenes/base');
const { Markup } = Telegraf;
const { leave } = Stage;
const config = require('./assets/config');
const bot = new Telegraf(config.telegram_token);
exports.bot = bot;
const stage = new Stage();

const MainPage = require("./assets/main-page/main-page");
const About = require("./assets/main-page/about");
const Gallery = require("./assets/main-page/gallery");
const Contacts = require("./assets/main-page/contacts");
const Cart = require("./assets/main-page/cart");
const Order = require("./assets/order/order");
// const Date = require("./assets/order/validate-date/date");
const ServiceOperations = require("./assets/service-ops");

const gallery = new Gallery();
const cart = new Cart();
const about = new About();
const order = new Order();
module.exports = order;
const dateValidation = require('./assets/order/validate/validate-date/date');
stage.register(dateValidation);

// (function order() {
//     // –í—à–∏—Ç—å –≤ –∫–æ—Ä–µ–Ω—å —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å
//     // –Ω—É–∂–Ω–æ –ª–∏ –µ–π –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É –ø—Ä–µ–∂–¥–µ–≤—Ä–µ–º–µ–Ω–Ω–æ –∏–ª–∏ –Ω–µ—Ç
//
//     let invoice = {
//         provider_token: config.payment_token,
//         start_parameter: 'time-machine-sku',
//         title: 'Working Time Machine',
//         description: 'Want to visit your great-great-great-grandparents? Make a fortune at the races? Shake hands with Hammurabi and take a stroll in the Hanging Gardens? Order our Working Time Machine today!',
//         currency: 'RUB',
//         photo_url: 'https://img.clipartfest.com/5a7f4b14461d1ab2caaa656bcee42aeb_future-me-fredo-and-pidjin-the-webcomic-time-travel-cartoon_390-240.png',
//         is_flexible: true,
//         prices: [
//             { label: 'Working Time Machine', amount: 100000 },
//             { label: 'Gift wrapping', amount: 110 }
//         ],
//         payload: {
//             coupon: 'BLACK FRIDAY'
//         }
//     };
//     let orderIsInitialised = false,
//         orderInfo = {
//             contactInfo: undefined,
//             orderDate: undefined,
//             orderTime: undefined,
//             orderDateInNumbers: [],
//             bouquetType: undefined,
//             shipping: undefined,
//             bouquetPrice: undefined
//         };
//     let validateOperations = {
//         validateDateCalled: false,
//         validateTimeCalled: false
//     };
//
// // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –±—ã–ª–∏ –ª–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–∫–∞–∑–∞ –∏ —Å–æ–±–∏—Ä–∞–µ—Ç –º–µ–Ω—é
// // –ï—Å–ª–∏ –∫–∞–∫–æ–π-–ª–∏–±–æ –ø—É–Ω–∫—Ç –º–µ–Ω—é –±—ã–ª –∑–∞–ø–æ–ª–Ω–µ–Ω, –Ω–∞–ø—Ä–æ—Ç–∏–≤ –µ–≥–æ –∫–Ω–æ–ø–∫–∏ –≤–º–µ—Å—Ç–µ emoji —Å—Ç–∞–≤–∏—Ç—Å—è –≥–∞–ª–æ—á–∫–∞
//     function makeOrderInterface() {
//         let btnTypes = {
//             date: {
//                 emoji: 'üìÖ',
//                 text: '–î–∞—Ç–∞',
//                 callback_data: 'date_order',
//                 data: orderInfo.orderDate
//             },
//             time: {
//                 emoji: '‚è±',
//                 text: '–í—Ä–µ–º—è',
//                 callback_data: 'time_order',
//                 data: orderInfo.orderTime
//             },
//             shipping: {
//               emoji: 'üõµ',
//               text: '–°–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è –±—É–∫–µ—Ç–∞',
//               callback_data: 'shipping_type',
//               data: orderInfo.shippingType
//             },
//             clientName: {
//                 emoji: 'üì≤',
//                 text: '–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ',
//                 callback_data: 'contact_info',
//                 data: orderInfo.contactInfo
//             },
//             bouqType: {
//                 emoji: 'üíê',
//                 text: '–¢–∏–ø –±—É–∫–µ—Ç–∞',
//                 callback_data: 'bouq_type',
//                 data: orderInfo.bouquetType
//             },
//             bouqPrice: {
//                 emoji: 'üí∏',
//                 text: '–°—Ç–æ–∏–º–æ—Å—Ç—å –±—É–∫–µ—Ç–∞',
//                 callback_data: 'bouq_cost',
//                 data: orderInfo.bouquetPrice
//             }
//         };
//         let buttonsArr = [];
//         for (let prop in btnTypes) {
//             let result = [];
//             if (btnTypes[prop].data !== undefined) {
//                 result.push(Markup.callbackButton('' + '‚úÖ' + ' ' + btnTypes[prop].text, '' + btnTypes[prop].callback_data));
//                 buttonsArr.push(result);
//             } else {
//                 result.push(Markup.callbackButton('' + btnTypes[prop].emoji + ' ' + btnTypes[prop].text, '' + btnTypes[prop].callback_data));
//                 buttonsArr.push(result);
//             }
//         }
//         return Markup.inlineKeyboard(buttonsArr).extra();
//     }
//
// // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∏—Ç –Ω–∞ —ç–∫—Ä–∞–Ω –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã –∑–∞–∫–∞–∑–∞
//     let displayOrderInterface = (ctx) => {
//         return ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –ª—é–±–æ–π –ø—É–Ω–∫—Ç –≤ –º–µ–Ω—é –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º. \n–ü—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–∞–ø—Ä–æ—Ç–∏–≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—É–∫—Ç–∞ –º–µ–Ω—è –±—É–¥–µ—Ç —Å—Ç–æ—è—Ç—å ‚úÖ",
//             makeOrderInterface()
//         );
//     };
//
//     let outputErrorMessage = (ctx, errorMsg) => {
//         ctx.reply("‚õîÔ∏è" + errorMsg);
//     };
//
// // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π, –∫–æ—Ç–æ—Ä—É—é –Ω—É–Ω–æ –Ω–∞–∂–∞—Ç—å, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤–≤–æ–¥–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–∫–∞–∑–∞
//     let requestContinue = (ctx, additionalMsg) => {
//         return ctx.reply(`–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∑–∞–∫–∞–∑ –±—É–∫–µ—Ç–∞ –∏–ª–∏ ${additionalMsg}`,
//             Markup.inlineKeyboard([
//                 Markup.callbackButton('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', '–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å'),
//             ]).extra());
//     };
//
//     let answerCbQueryAndShowMenu = (ctx) => {
//         ctx.telegram.answerCbQuery(ctx.update['callback_query'].id, "–ó–∞–≥—Ä—É–∂–∞—é –º–µ–Ω—é ‚åõÔ∏è");
//         ctx.telegram.deleteMessage(ctx.update['callback_query'].message.chat.id, ctx.update['callback_query'].message['message_id']);
//         for (let key in validateOperations) {
//             if (validateOperations[key]) {
//                 validateOperations[key] = false;
//             }
//         }
//         // –í—ã–≤–æ–¥–∏–º –º–µ–Ω—é –∑–∞–∫–∞–∑–∞
//         displayOrderInterface(ctx);
//     };
//
//     function requestDate(ctx) {
//         validateOperations.validateDateCalled = true;
//         console.log("*** –ó–∞–ø—É—â–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è, –∑–∞–ø—Ä–∞—à–∏–≤–∞—é—â–∞—è –≤–≤–æ–¥ –¥–∞—Ç—ã");
//         if (orderInfo.orderDate) {
//           ctx.reply(`‚ö†Ô∏è –í—ã —Ä–∞–Ω–µ–µ –≤–≤–æ–¥–∏–ª–∏ —ç—Ç—É –¥–∞—Ç—É: \n ${orderInfo.orderDate} \n –≠—Ç–∞ –¥–∞—Ç–∞ –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω–∞`);
//         }
//         ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å –±—É–∫–µ—Ç. \n–ù–∞–ø–∏—à–∏—Ç–µ –¥–∞—Ç—É —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤. \nüëç –ü—Ä–∏–º–µ—Ä –¥–∞—Ç—ã: 14 —Ñ–µ–≤—Ä–∞–ª—è. \n–ï—Å–ª–∏ –≤—ã –≤–≤–µ–ª–∏ –Ω–µ —Ç—É –¥–∞—Ç—É ‚Äì –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤—É—é",
//             Markup.inlineKeyboard([
//                 // –ï—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è, —Ç–æ–≥–¥–∞ –ø–æ–ø—Ä–æ—Å–∏—Ç—å —É–∫–∞–∑–∞—Ç—å —Ç–æ—á–Ω–æ–µ –≤—Ä–µ–º—è (—ç—Ç–∞ —Ñ–∏—á–∞ –ø–æ–¥ –≤–æ–ø—Ä–æ—Å–æ–º)
//                 Markup.callbackButton('–°–µ–≥–æ–¥–Ω—è', '–°–µ–≥–æ–¥–Ω—è'),
//                 Markup.callbackButton('–ó–∞–≤—Ç—Ä–∞', '–ó–∞–≤—Ç—Ä–∞')
//             ]).extra());
//         bot.on('callback_query', (ctx) => {
//             ctx.telegram.answerCbQuery(ctx.update['callback_query'].id, "");
//             // –≠—Ç–æ—Ç —Ñ—Ä–∞–≥–º–µ–Ω—Ç –∫–æ–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –µ—Å–ª–∏ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"
//             if (ctx.update['callback_query'].data === "–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å") {
//                 // ctx.telegram.answerCbQuery(ctx.update['callback_query'].id, "–ó–∞–≥—Ä—É–∂–∞—é –º–µ–Ω—é ‚åõÔ∏è");
//                 // ctx.telegram.deleteMessage(ctx.update['callback_query'].message.chat.id, ctx.update['callback_query'].message['message_id']);
//                 // validateDateCalled = false;
//                 // // –í—ã–≤–æ–¥–∏–º –º–µ–Ω—é –∑–∞–∫–∞–∑–∞
//                 // displayOrderInterface(ctx);
//                 answerCbQueryAndShowMenu(ctx);
//             }
//             // –≠—Ç–æ—Ç —Ñ—Ä–∞–≥–º–µ–Ω—Ç –∫–æ–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –µ—Å–ª–∏ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–°–µ–≥–æ–¥–Ω—è"
//             else if (ctx.update['callback_query'].data === "–°–µ–≥–æ–¥–Ω—è") {
//                 // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –¥–∞—Ç—É –∑–∞–∫–∞–∑–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
//                 if (validateOperations.validateDateCalled) {
//                     orderInfo.orderDate = (() => {
//                         const months = ['—è–Ω–≤–∞—Ä—è', '—Ñ–µ–≤—Ä–∞–ª—è', '–º–∞—Ä—Ç–∞', '–∞–ø—Ä–µ–ª—è', '–º–∞—è', '–∏—é–Ω—è', '–∏—é–ª—è', '–∞–≤–≥—É—Å—Ç–∞', '—Å–µ–Ω—Ç—è–±—Ä—è', '–æ–∫—Ç—è–±—Ä—è', '–Ω–æ—è–±—Ä—è', '–¥–µ–∫–∞–±—Ä—è'];
//                         let oneDay = 0,
//                             result;
//                         let thisDate = new Date(Date.now() + oneDay);
//                         let currentMonth = months[thisDate.getMonth()],
//                             currentDay = thisDate.getDate().toString();
//                         result = currentDay + " " + currentMonth;
//                         return result;
//                     })();
//                     ctx.reply("‚úÖ –•–æ—Ä–æ—à–æ, –±—É–∫–µ—Ç –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤ –∫ " + orderInfo.orderDate);
//                     return requestContinue(ctx, "–≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥—É—é –¥–∞—Ç—É");
//                 }
//             } else {
//                 if (validateOperations.validateDateCalled) {
//                     orderInfo.orderDate = (() => {
//                         const months = ['—è–Ω–≤–∞—Ä—è', '—Ñ–µ–≤—Ä–∞–ª—è', '–º–∞—Ä—Ç–∞', '–∞–ø—Ä–µ–ª—è', '–º–∞—è', '–∏—é–Ω—è', '–∏—é–ª—è', '–∞–≤–≥—É—Å—Ç–∞', '—Å–µ–Ω—Ç—è–±—Ä—è', '–æ–∫—Ç—è–±—Ä—è', '–Ω–æ—è–±—Ä—è', '–¥–µ–∫–∞–±—Ä—è'];
//                         let result;
//                         let oneDay = 86400000;
//                         let thisDate = new Date(Date.now() + oneDay);
//                         let currentMonth = months[thisDate.getMonth()],
//                             currentDay = thisDate.getDate().toString();
//                         result = currentDay + " " + currentMonth;
//                         return result;
//                     })();
//                     ctx.reply(`‚úÖ –•–æ—Ä–æ—à–æ, –±—É–∫–µ—Ç –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤ –∫ ${orderInfo.orderDate}`);
//                     requestContinue(ctx, "–≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥—É—é –¥–∞—Ç—É");
//                 }
//             }
//         });
//         // –†–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞—Ç—ã
//         bot.on('message', (ctx) => {
//             if (validateOperations.validateDateCalled) {
//                 if(checkDate(ctx)) {
//                     ctx.reply(`‚úÖ –•–æ—Ä–æ—à–æ. –í–∞—à –±—É–∫–µ—Ç –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤ –∫ ${orderInfo.orderDate}.`);
//                     requestContinue(ctx, "–≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥—É—é –¥–∞—Ç—É");
//                 } else {
//                     outputErrorMessage(ctx, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –¥–∞—Ç—É!");
//                 }
//             }
//         });
//     }
//
//     // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–æ–π –≤–≤–µ–¥–µ–Ω–Ω–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –¥–∞—Ç—ã
//     function checkDate(ctx) {
//         const scheduleDates = {
//             'today': {
//                 matchExpression: "—Å–µ–≥–æ–¥–Ω",
//                 fullName: "—Å–µ–≥–æ–¥–Ω—è",
//                 scheduleDate() {
//                     const months = ['—è–Ω–≤–∞—Ä—è', '—Ñ–µ–≤—Ä–∞–ª—è', '–º–∞—Ä—Ç–∞', '–∞–ø—Ä–µ–ª—è', '–º–∞—è', '–∏—é–Ω—è', '–∏—é–ª—è', '–∞–≤–≥—É—Å—Ç–∞', '—Å–µ–Ω—Ç—è–±—Ä—è', '–æ–∫—Ç—è–±—Ä—è', '–Ω–æ—è–±—Ä—è', '–¥–µ–∫–∞–±—Ä—è'];
//
//                     let oneDay = 0,
//                         result;
//                     if (arguments[0]) oneDay = 86400000;
//                     let thisDate = new Date(Date.now() + oneDay);
//                     let currentMonth = months[thisDate.getMonth()],
//                         currentDay = thisDate.getDate().toString();
//                     result = currentDay + " " + currentMonth;
//                     return result;
//                 },
//                 specifyTime: true
//             },
//             'tomorrow': {
//                 matchExpression: "–∑–∞–≤—Ç—Ä",
//                 fullName: "–∑–∞–≤—Ç—Ä–∞",
//                 scheduleDate() {
//                     const months = ['—è–Ω–≤–∞—Ä—è', '—Ñ–µ–≤—Ä–∞–ª—è', '–º–∞—Ä—Ç–∞', '–∞–ø—Ä–µ–ª—è', '–º–∞—è', '–∏—é–Ω—è', '–∏—é–ª—è', '–∞–≤–≥—É—Å—Ç–∞', '—Å–µ–Ω—Ç—è–±—Ä—è', '–æ–∫—Ç—è–±—Ä—è', '–Ω–æ—è–±—Ä—è', '–¥–µ–∫–∞–±—Ä—è'];
//
//                     let oneDay = 86400000,
//                         result;
//                     let thisDate = new Date(Date.now() + oneDay);
//                     let currentMonth = months[thisDate.getMonth()],
//                         currentDay = thisDate.getDate().toString();
//                     result = currentDay + " " + currentMonth;
//                     return result;
//                 },
//                 specifyTime: true
//             },
//             'october': {
//                 matchExpression: "–æ–∫—Ç",
//                 fullName: "–æ–∫—Ç—è–±—Ä—è",
//                 monthNumber: 10
//             },
//             'november': {
//                 matchExpression: "–Ω–æ—è–±",
//                 fullName: "–Ω–æ—è–±—Ä—è",
//                 monthNumber: 11
//             },
//             'december': {
//                 matchExpression: "–¥–µ–∫",
//                 fullName: "–¥–µ–∫–∞–±—Ä—è",
//                 monthNumber: 12
//             },
//             'january': {
//                 matchExpression: "—è–Ω–≤",
//                 fullName: "—è–Ω–≤–∞—Ä—è",
//                 monthNumber: 1
//             },
//             'february': {
//                 matchExpression: "—Ñ–µ–≤",
//                 fullName: "—Ñ–µ–≤—Ä–∞–ª—è",
//                 monthNumber: 2
//             },
//             'march': {
//                 matchExpression: "–º–∞—Ä—Ç",
//                 fullName: "–º–∞—Ä—Ç–∞",
//                 monthNumber: 3
//             },
//             'april': {
//                 matchExpression: "–∞–ø—Ä",
//                 fullName: "–∞–ø—Ä–µ–ª—è",
//                 monthNumber: 4
//             },
//             'may': {
//                 matchExpression: ['–º–∞–π', '–º–∞—è'],
//                 fullName: "–º–∞—è",
//                 monthNumber: 5
//             },
//             'june': {
//                 matchExpression: "–∏—é–Ω",
//                 fullName: "–∏—é–Ω—è",
//                 monthNumber: 6
//             },
//             'july': {
//                 matchExpression: "–∏—é–ª",
//                 fullName: "–∏—é–ª—è",
//                 monthNumber: 7
//             },
//             'august': {
//                 matchExpression: "–∞–≤–≥—É—Å",
//                 fullName: "–∞–≤–≥—É—Å—Ç–∞",
//                 monthNumber: 8
//             },
//             'september': {
//                 matchExpression: "—Å–µ–Ω—Ç",
//                 fullName: "—Å–µ–Ω—Ç—è–±—Ä—è",
//                 monthNumber: 9
//             }
//         };
//         console.log("*** –ó–∞–ø—É—â–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞—Ç—ã");
//
//         // –í —ç—Ç–æ–º –æ–±—Ö–µ–∫—Ç–µ —Ö—Ä–∞–Ω–∏—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–∞—Ç–µ. –ï—Å–ª–∏ –æ–Ω–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏, —Ç–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
//         // —ç—Ç–æ—Ç –æ–±—ä–µ–∫—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ –¥—Ä—É–≥–æ–π –æ–±—ä–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å—Å—è –∫–ª–∏–µ–Ω—Ç—É –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
//         let resultDateObject = {};
//
//         // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –º–µ—Å—è—Ü–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –≥–æ–¥–∞
//         let daysInMonth = (month, year) => {
//             return new Date(year, month, 0).getDate();
//         };
//
//         function validateMonth(matchRegexArray) {
//             // matchRegexArray[1] = matchRegexArray[1].substr(0,2);
//             console.log("–î–ª–∏–Ω–∞ –º–∞—Å—Å–∏–≤–∞: " + matchRegexArray.length);
//
//             if (matchRegexArray.length === 1) {
//                 outputErrorMessage(ctx, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –¥–∞—Ç—É!");
//             }
//             if (matchRegexArray[1][0] === "0") {
//                 matchRegexArray[1] = matchRegexArray[1].substr(1,2);
//             }
//             // –≠—Ç–æ—Ç —Ñ—Ä–∞–≥–º–µ–Ω—Ç –∫–æ–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –¥–∞—Ç—É —Ç–∞–∫: "–î–î.–ú–ú"
//             if (matchRegexArray.length === 2) {
//
//                 for (let key in scheduleDates) {
//                     // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É –µ—Å–ª–∏ —á–∏—Å–ª–æ –ú–ú (–º–µ—Å—è—Ü) –±–æ–ª—å—à–µ 12
//                     if (+matchRegexArray[1] > 12) return false;
//                     // –î–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ —Å–∏–ª –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —à–∞–≥–∏ –Ω–∏–∂–µ –µ—Å–ª–∏ –≤ –æ–±—ä–µ–∫—Ç–µ –¥–∞—Ç—ã –Ω–µ—Ç —Å–≤–æ–π—Å—Ç–≤–∞ "monthNumber",
//                     // —Å–æ–¥–µ—Ä–∂–∞—â–µ–≥–æ –Ω–æ–º–µ—Ä –º–µ—Å—è—Ü–∞ –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è (—Ç–∞–∫–∏—Ö —Å–≤–æ–π—Å—Ç–≤ –Ω–µ—Ç —É "—Å–µ–≥–æ–¥–Ω—è" –∏ "–∑–∞–≤—Ç—Ä–∞")
//                     if (!scheduleDates[key].hasOwnProperty('monthNumber')) continue;
//                     let monthRegEx = new RegExp(scheduleDates[key].monthNumber, 'i');
//                     let foundMonthInString = matchRegexArray[1].match(monthRegEx);
//                     if (foundMonthInString !== null) {
//
//                         if (scheduleDates[key].monthNumber.toString().search(matchRegexArray[1]) !== -1) {
//                             resultDateObject.day = +matchRegexArray[0];
//                             resultDateObject.month = scheduleDates[key];
//                             // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞—Ç—É –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –ø—Ä–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–∏
//                             orderInfo.orderDateInNumbers[1] = (scheduleDates[key].monthNumber - 1);
//                             console.log("–ú–µ—Å—è—Ü –ø—Ä–æ–≤–µ—Ä–µ–Ω. –ü–æ–ª—É—á–∏–ª–∞—Å—å –≤–æ—Ç —Ç–∞–∫–∞—è –¥–∞—Ç–∞: " + JSON.stringify(resultDateObject.month));
//                             return true;
//                         }
//                     }
//                 }
//                 return false;
//             }
//             // –í—ã—á–ª–µ–Ω—è–µ–º –º–µ—Å—è—Ü –º–∞—Å—Å–∏–≤–∞-—Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
//             for (let key in scheduleDates) {
//
//                 // –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –º–µ—Å—è—Ü—ã —Å–æ–¥–µ—Ä–∂–∞—Ç –º–∞—Å—Å–∏–≤ —à–∞–±–ª–æ–Ω–æ–≤ –¥–ª—è —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π
//                 // –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä–∞ –∑–Ω–∞—á–µ–Ω–∏–π –º–∞—Å—Å–∏–≤–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ñ—Ä–∞–≥–º–µ–Ω—Ç –∫–æ–¥–∞ –Ω–∏–∂–µ
//                 if (typeof(scheduleDates[key].matchExpression) === "object" ) {
//                     for (let i = 0; i < scheduleDates[key].matchExpression.length; i++) {
//                         let monthRegEx = new RegExp(scheduleDates[key].matchExpression[i], 'i');
//                         if (matchRegexArray[2].search(monthRegEx) !== -1) {
//                             // –ü—Ä–∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é-—Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç,
//                             // —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–µ—Å—è—Ü–µ
//                             resultDateObject.day = +matchRegexArray[1];
//                             resultDateObject.month = scheduleDates[key];
//                             orderInfo.orderDateInNumbers[1] = scheduleDates[key].monthNumber - 1;
//                             console.log("–ú–µ—Å—è—Ü –ø—Ä–æ–≤–µ—Ä–µ–Ω. –ü–æ–ª—É—á–∏–ª–∞—Å—å –≤–æ—Ç —Ç–∞–∫–∞—è –¥–∞—Ç–∞: " + JSON.stringify(resultDateObject.month));
//                             return true;
//                         }
//                     }
//                 }
//
//                 let monthRegEx = new RegExp(scheduleDates[key].matchExpression, 'i');
//                 // –í —è—á–µ–π–∫–µ –Ω–æ–º–µ—Ä 2 –ª–µ–∂–∏—Ç —Å—Ç—Ä–æ–∫–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—è—Ü–∞
//                 // ["25 –¥–µ–∫–∞–±—Ä—è", "25", "–¥–µ–∫–∞–±—Ä—è", index: 0, input: "25 –¥–µ–∫–∞–±—Ä—è", groups: undefined]
//                 if (matchRegexArray[2].search(monthRegEx) !== -1) {
//                     // –ü—Ä–∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é-—Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç,
//                     // —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–µ—Å—è—Ü–µ
//                     resultDateObject.day = +matchRegexArray[1];
//                     // –í–û–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –æ–±—ä–µ–∫—Ç –Ω–∞ –Ω–æ–º–µ—Ä –º–µ—Å—è—Ü–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JS
//                     resultDateObject.month = scheduleDates[key];
//                     orderInfo.orderDateInNumbers[1] = (scheduleDates[key].monthNumber - 1);
//                     console.log("–ú–µ—Å—è—Ü –ø—Ä–æ–≤–µ—Ä–µ–Ω. –ü–æ–ª—É—á–∏–ª–∞—Å—å –≤–æ—Ç —Ç–∞–∫–∞—è –¥–∞—Ç–∞: " + JSON.stringify(resultDateObject.month));
//                     return true;
//                 }
//             }
//             return false;
//         }
//
//         function validateDay(resultDateObject) {
//             console.log(resultDateObject);
//             let scheduleYear = new Date().getFullYear(),
//                 thisMonth = new Date().getMonth(),
//                 thisYear = new Date().getFullYear();
//             let {month, day} = resultDateObject;
//
//             if (month.monthNumber < thisMonth + 1) scheduleYear++;
//             console.log("–ì–æ–¥ –∑–∞–ø–∏—Å–∏: " + scheduleYear);
//             if (day !== 0 && day <= daysInMonth(month.monthNumber, scheduleYear)) {
//                 console.log("–ß–∏—Å–ª–æ –º–µ—Å—è—Ü–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. –ü–æ–ª—É—á–∏–ª–∞—Å—å —Ç–∞–∫–∞—è –¥–∞—Ç–∞: " + day + " " + month.fullName);
//                 if (scheduleYear > thisYear)  {
//                     // –í orderInfo.orderDateInNumbers[0] —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤—ã–±—Ä–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –º–µ—Å—è—Ü–∞
//                     orderInfo.orderDateInNumbers[0] = day;
//                     orderInfo.orderDate = "" + day + " " + month.fullName + " " + scheduleYear + " –≥–æ–¥–∞";
//                     return true;
//                 }
//                 orderInfo.orderDate = "" + day + " " + month.fullName;
//                 return true;
//             } else {
//                 outputErrorMessage(ctx, "–í –º–µ—Å—è—Ü–µ, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –≤–≤–µ–ª–∏, –Ω–µ—Ç —á–∏—Å–ª–∞ " + resultDateObject.day + "!");
//                 resultDateObject.month = undefined;
//                 resultDateObject.day = undefined;
//                 return false;
//             }
//         }
//
//         // –°—Ç—Ä–æ–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ "–ß–∏—Å–ª–æ –º–µ—Å—è—Ü" (–ø—Ä. 21 —Å–µ–Ω—Ç—è–±—Ä—è)
//         let stringForValidation;
//
//         // –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç —Å —Ñ–æ—Ä–º–∞—Ç–æ–º –¥–µ–Ω—å-–º–µ—Å—è—Ü, —Ç–æ–≥–¥–∞ –∏—â–µ–º –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –º–µ—Å—è—Ü–∞
//         if (stringForValidation = ctx.message.text.match(/(\d+)[\s\/.,\-]?([–∞-—è—ë]+)/i)) {
//             // –ï—Å–ª–∏ –º–µ—Å—è—Ü –±—ã–ª —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω, —Ç–æ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –¥–Ω—è (—á–∏—Å–ª–∞)
//             let validationResult;
//             if (validateMonth(stringForValidation)) {
//                 validationResult = (validateDay(resultDateObject)) ? true : false;
//             }
//             return validationResult;
//         } else if (stringForValidation = ctx.message.text.match(/(\d+)[\s\/.,:\\-](\d+)/i)) {
//             let validationResult;
//             // –ù–∞ –¥–∞–Ω–Ω–æ–º —ç—Ç–∞–ø–µ stringForValidation –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫: ["26.06"]
//             // –§—É–Ω–∫—Ü–∏—è validateMonth –¥–æ–ª–∂–Ω–∞ –ø–æ–ª—É—á–∞—Ç—å –º–∞—Å—Å–∏–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, ["26", "06"])
//             validationResult = validateMonth(stringForValidation[0].split(/[\s\/.,:\\\-]/)) ? validateDay(resultDateObject) : false;
//             return validationResult;
//         } else if (stringForValidation = ctx.message.text.match(/(—Å–µ–≥–æ–¥–Ω—è)?(–∑–∞–≤—Ç—Ä–∞)?/i)) {
//             // –ò–Ω–∞—á–µ –∏—â–µ–º –±—ã–ª–æ –ª–∏ –≤–≤–µ–¥–µ–Ω–æ "—Å–µ–≥–æ–¥–Ω—è" –∏–ª–∏ "–∑–∞–≤—Ç—Ä–∞"
//             console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª: " + stringForValidation);
//             if (stringForValidation[0].toLowerCase().search(scheduleDates['today'].matchExpression) !== -1) {
//                 // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª "—Å–µ–≥–æ–¥–Ω—è", —Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è, –≤—ã—Å—á–∏—Ç—ã–≤–∞—é—â–∞—è
//                 // –¥–∞—Ç—É –¥–ª—è —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –¥–Ω—è
//                 orderInfo.orderDate = scheduleDates['today'].scheduleDate();
//                  return true;
//             } else {
//                 // –ò–Ω–∞—á–µ –¥–∞—Ç–∞ –≤—ã—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –¥–ª—è –∑–∞–≤—Ç—Ä–∞—à–Ω–µ–≥–æ –¥–Ω—è
//                 orderInfo.orderDate = scheduleDates['tomorrow'].scheduleDate();
//                 return true;
//             }
//             console.log(resultDateObject);
//         } else {
//             return false;
//         }
//     }
//
//     // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
//     function requestTime(ctx) {
//         validateOperations.validateTimeCalled = true;
//         let finishWork = 20,
//             startWork = 10;
//         ctx.telegram.answerCbQuery(ctx.update['callback_query'].id, "");
//         let result = false;
//         let today = new Date();
//         let workingHoursMsg = "‚è∞ –°–µ–≥–æ–¥–Ω—è –º—ã —Ä–∞–±–æ—Ç–∞–µ–º —Å " + startWork + ":00 –¥–æ " + finishWork + ":00";
//         if (today.getDay() === 6 || today.getDay() === 5) {
//             startWork = 11;
//             finishWork = 19;
//         }
//         if (orderInfo.shipping === undefined) {
//           requestShipping(ctx);
//         }
//
//         ctx.reply("–í–≤–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è, –∫–æ–≥–¥–∞ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–∞—Ç—å –±—É–∫–µ—Ç. \n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∑—ã–≤–∞–π—Ç–µ –≤—Ä–µ–º—è –Ω–µ —Ä–∞–Ω—å—à–µ, —á–µ–º +2 —á–∞—Å–∞ –∫ –Ω–∞—Å—Ç–æ—è—â–µ–º—É –≤—Ä–µ–º–µ–Ω–∏ \n–ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞ –≤—Ä–µ–º–µ–Ω–∏: 17:30");
//         ctx.reply(workingHoursMsg);
//         // –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç –±–ª–∏–∂–∞–π—à–µ–µ –¥–æ—Å—É–ø–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è callback-–∫–Ω–æ–ø–∫–∏
//         function calculateClosestTime() {
//             let now = new Date(),
//                 time;
//             if (now.getHours() > (startWork + 2) && now.getHours() < (finishWork - 2)) {
//                 if (now.getMinutes() > 20) {
//                     time = (now.getHours() + 2) + ":00";
//                 } else if (now.getMinutes() > 45)
//                     time = "" + (now.getHours() + 3) + ":00";
//             } else {
//                 time = "" + (startWork + 2) + ":00 (–∑–∞–≤—Ç—Ä–∞)";
//             }
//             if (arguments[0]) {
//                 let data = (time < now) ? time + "+" : time;
//                 console.log("–î–∞–Ω–Ω—ã–µ –¥–ª—è callback query: " + data);
//                 return data;
//             } else {
//                 console.log("–û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –≤ –∫–Ω–æ–ø–∫–µ –≤—Ä–µ–º—è: " + time);
//                 return time;
//             }
//         };
//         ctx.reply("–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –Ω–∏–∂–µ", Markup.inlineKeyboard([
//             // –ï—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è, —Ç–æ–≥–¥–∞ –ø–æ–ø—Ä–æ—Å–∏—Ç—å —É–∫–∞–∑–∞—Ç—å —Ç–æ—á–Ω–æ–µ –≤—Ä–µ–º—è (—ç—Ç–∞ —Ñ–∏—á–∞ –ø–æ–¥ –≤–æ–ø—Ä–æ—Å–æ–º)
//             Markup.callbackButton(calculateClosestTime(), calculateClosestTime("generateData"))
//         ]).extra());
//         console.log("–í—Ä–µ–º—è –∑–∞–ø—Ä–æ—à–µ–Ω–æ!");
//
//         if (validateOperations.validateTimeCalled) {
//             // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ —Ä–∞–∑–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫ ("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å" –∏–ª–∏ "–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è")
//             bot.on('callback_query', (ctx) => {
//                 ctx.telegram.answerCbQuery(ctx.update['callback_query'].id, "");
//                 console.log(ctx.update['callback_query'].data);
//                 if (ctx.update['callback_query'].data === "–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å") {
//                     answerCbQueryAndShowMenu(ctx);
//                 } else {
//                     orderInfo.orderTime = ctx.update['callback_query'].data;
//                     console.log("–í—Ä–µ–º—è –∑–∞–∫–∞–∑–∞: " + orderInfo.orderTime);
//                     answerCbQueryAndShowMenu(ctx);
//                 }
//             });
//             bot.on('message', (ctx) => {
//                 if (validateOperations.validateTimeCalled) {
//                     if (checkTime(startWork, finishWork)) {
//                         requestContinue(ctx, "–≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ –≤—Ä–µ–º—è");
//                     }
//                     return result;
//                 }
//             });
//         }
//     }
//
//     function checkTime(startWork, finishWork) {
//         let timeInputIsValid = false,
//             now = new Date(),
//             timeInString;
//         bot.on('message', (ctx) => {
//             console.log("*** –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏");
//             timeInString = ctx.message.text.match(/(\d\d?)[.\\:,](\d\d?)/i);
//             console.log(timeInString);
//             // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–≤–µ–¥–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å
//             timeInputIsValid = (+timeInString[2] >= 0 && +timeInString[2] <= 59) ? ((time) => {
//                 if (+time[1] >= 0 && +time[1] <= 23) return true;
//             })(timeInString) : false;
//         });
//         return outputErrorMessage(ctx, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è!");
//
//     }
//
//     function requestShipping(ctx) {
//       ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫ –±—É–¥–µ—Ç–µ –∑–∞–±–∏—Ä–∞—Ç—å –±—É–∫–µ—Ç",  Markup.inlineKeyboard([
//         Markup.callbackButton('–°–∞–º–æ–≤—ã–≤–æ–∑', '—Å–∞–º–æ–≤—ã–≤–æ–∑'),
//         Markup.callbackButton('–î–æ—Å—Ç–∞–≤–∫–∞', '–¥–æ—Å—Ç–∞–≤–∫–∞')
//       ]).extra());
//       bot.on('callback_query', (ctx) => {
//         ctx.telegram.answerCbQuery(ctx.update['callback_query'].id, `–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–ø–æ—Å–æ–±: ${ctx.update['callback_query'].data}`);
//         if (ctx.update['callback_query'].data === '–¥–æ—Å—Ç–∞–≤–∫–∞')  {
//           orderInfo.shipping = true;
//         } else {
//           orderInfo.shipping = false;
//         }
//       });
//       bot.hears(/'—Å–∞–º–æ–≤—ã–≤–æ–∑'/i, (ctx) => {
//         orderInfo.shipping = false;
//       })
//       bot.hears(/'–¥–æ—Å—Ç–∞–≤–∫–∞'/i, (ctx) => {
//         orderInfo.shipping = true;
//       })
//     }
//
//     // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–∏–ø –±—É–∫–µ—Ç–∞ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –∫–∞–∫ –ø—Ä–∏–º–µ—Ä
//     let chooseBouquetType = ctx => {
//         let requestBouquetType = ctx => {
//             return ctx.reply("–ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ç–∏–ø –±—É–∫–µ—Ç–∞ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø—Ä–∏–º–µ—Ä–æ–≤ –Ω–∏–∂–µ!", Markup.inlineKeyboard([
//                 // –ï—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è, —Ç–æ–≥–¥–∞ –ø–æ–ø—Ä–æ—Å–∏—Ç—å —É–∫–∞–∑–∞—Ç—å —Ç–æ—á–Ω–æ–µ –≤—Ä–µ–º—è (—ç—Ç–∞ —Ñ–∏—á–∞ –ø–æ–¥ –≤–æ–ø—Ä–æ—Å–æ–º)
//                 Markup.callbackButton('–°–≤–∞–¥–µ–±–Ω—ã–π', '—Å–≤–∞–¥–µ–±–Ω—ã–π'),
//                 Markup.callbackButton('–î–ª—è –¥–µ–≤—É—à–∫–∏', '–¥–ª—è –¥–µ–≤—É—à–∫–∏')
//             ],[Markup.callbackButton('–î–ª—è –∂–µ–Ω—ã', '–¥–ª—è –∂–µ–Ω—ã')]).extra())
//         };
//         requestBouquetType(ctx);
//     };
//
//     function provideContactInfo(ctx) {
//
//     }
//
//     function launch(ctx) {
//         console.log("*** –ó–∞–ø—É—â–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–∫–∞–∑–∞ –±—É–∫–µ—Ç–æ–≤");
//         orderIsInitialised = true;
//         ctx.reply("–•–æ—Ä–æ—à–æ, –¥–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º!", Markup.keyboard([
//             ['üì± –ú–µ–Ω—é –∑–∞–∫–∞–∑–∞'],
//             ['üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–∞–≥–∞–∑–∏–Ω–æ–º'],
//             ['‚õîÔ∏è–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑Ô∏è']
//         ])
//             .oneTime()
//             .resize()
//             .extra()
//         );
//
//         displayOrderInterface(ctx);
//     }
//
//     bot.action('date_order', (ctx) => {
//         ctx.telegram.answerCbQuery(ctx.update['callback_query'].id, "–ú–∏–Ω—É—Ç–æ—á–∫—É");
//         requestDate(ctx);
//     });
//
//     bot.action('time_order', (ctx) => {
//         ctx.telegram.answerCbQuery(ctx.update['callback_query'].id);
//         requestTime(ctx);
//     });
//
//     bot.hears(/–ú–µ–Ω—é –∑–∞–∫–∞–∑–∞/i, (ctx) => {
//         for (let key in validateOperations) {
//             if (validateOperations[key]) {
//                 validateOperations[key] = false;
//             }
//         }
//         displayOrderInterface(ctx);
//     });
//
//     bot.hears(/–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑–∞/i, () => {
//         cancelOrder();
//     });
//
//     global.order = launch;
//     global.orderInitialized = orderIsInitialised;
// })();
bot.use(session());
bot.use(stage.middleware());

bot.start((ctx) => {
    MainPage.displayMainPage(ctx, MainPage.welcomeMsg);
    MainPage.offerBotHelp(ctx);
    bot.action('howtouse', (ctx) => {
        ctx.telegram.answerCbQuery(ctx.update['callback_query'].id, "");
        ctx.reply('https://telegra.ph/CHernoviki-11-17');
    })
});

bot.hears(/üíê –ó–∞–∫–∞–∑–∞—Ç—å –±—É–∫–µ—Ç/, (ctx) => {
    order.launch(ctx);

    bot.hears(/–ú–µ–Ω—é –∑–∞–∫–∞–∑–∞/i, (ctx) => {
        if (!order.orderIsInitialised) {
            return;
        }
       order.displayInterface(ctx, "–í—ã–±–µ—Ä–∏—Ç–µ –ª—é–±–æ–π –ø—É–Ω–∫—Ç –≤ –º–µ–Ω—é");
    });

    bot.hears(/–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–∞–≥–∞–∑–∏–Ω–æ–º/i, (ctx) => {
        if (!order.orderIsInitialised) {
            return;
        }
        return Contacts.showPhoneNumber(ctx);
    });

    bot.hears(/–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑/i, (ctx) => {
        if (!order.orderIsInitialised) {
            return;
        }
        let cancelOrder = new Promise((resolve) => {
            order.cancelOrder(ctx);
            resolve([ctx, "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –º–µ–Ω—é, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å"]);
        });

        cancelOrder.then((val) => {
            let [context, msg] = val;
            MainPage.displayMainPage(context, msg);
        });
        console.log("*** –ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω ***");
    });

    bot.on('callback_query', (ctx) => {
        ctx.telegram.answerCbQuery(ctx.update['callback_query'].id, "");
       if (ctx.update['callback_query'].data === "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å") {
           ctx.telegram.answerCbQuery(ctx.update['callback_query'].id, "üì± –û—Ç–∫—Ä—ã–≤–∞—é –º–µ–Ω—é –∑–∞–∫–∞–∑–∞");
           order.displayInterface(ctx, "–í—ã–±–µ—Ä–∏—Ç–µ –ª—é–±–æ–π –ø—É–Ω–∫—Ç –≤ –º–µ–Ω—é");
       } else {
           console.log(ctx.update['callback_query'].data);
           ctx.scene.enter(ctx.update['callback_query'].data);
       }
    });
});


bot.hears('–§–æ—Ç–æ–≥–∞–ª–µ—Ä–µ—è', (ctx) => {
    gallery.show(ctx);
});


bot.hears('–ö–æ–Ω—Ç–∞–∫—Ç—ã', (ctx) => {
    Contacts.displayContactInfo(ctx);
    bot.action('–ü–æ–∫–∞–∑–∞—Ç—å –∞–¥—Ä–µ—Å', (ctx) => {
        Contacts.showAddress(ctx);
    })
});


bot.hears('–û –Ω–∞—Å', (ctx) => {
    about.displayInfo(ctx);
});


bot.hears('–ú–æ—è –∫–æ—Ä–∑–∏–Ω–∞', (ctx) => {
    cart.show(ctx);
});


bot.startPolling();