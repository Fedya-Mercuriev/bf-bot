'use strict';

const Telegraf = require('telegraf');
const {Extra, Markup} = Telegraf;
const config = require('./config.js');
const bot = new Telegraf(config.telegraf_token);
let workingHours = "–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º —Å 11:00 –¥–æ 19:00";


(function order() {
    let invoice = {
        provider_token: config.payment_token,
        start_parameter: 'time-machine-sku',
        title: 'Working Time Machine',
        description: 'Want to visit your great-great-great-grandparents? Make a fortune at the races? Shake hands with Hammurabi and take a stroll in the Hanging Gardens? Order our Working Time Machine today!',
        currency: 'RUB',
        photo_url: 'https://img.clipartfest.com/5a7f4b14461d1ab2caaa656bcee42aeb_future-me-fredo-and-pidjin-the-webcomic-time-travel-cartoon_390-240.png',
        is_flexible: true,
        prices: [
            { label: 'Working Time Machine', amount: 100000 },
            { label: 'Gift wrapping', amount: 110 }
        ],
        payload: {
            coupon: 'BLACK FRIDAY'
        }
    };
    let orderIsInitialised = false,
        orderInfo = {
            clientName: "",
            orderDate: undefined,
            bouquetType: ""
        },
        dateIsAlreadyChosen = false;

    let outputErrorMessage = (ctx, errorMsg) => {
        ctx.reply(errorMsg);
    };

    let notifyDateRewrite = (ctx) => {
        ctx.reply("–•–æ—Ä–æ—à–æ, –ø–µ—Ä–µ–∑–∞–ø–∏—à—É –¥–∞—Ç—É –∑–∞–∫–∞–∑–∞. –¢–µ–ø–µ—Ä—å –±—É–∫–µ—Ç –±—É–¥–µ—Ç –∑–∞–∫–∞–∑–∞–Ω –Ω–∞: ${orderInfo.orderDate}");
    };

    let requestDate = (ctx) => {
        console.log("*** –ó–∞–ø—É—â–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è, –∑–∞–ø—Ä–∞—à–∏–≤–∞—é—â–∞—è –≤–≤–æ–¥ –¥–∞—Ç—ã");
        ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å –±—É–∫–µ—Ç. \n–ù–∞–ø–∏—à–∏—Ç–µ –¥–∞—Ç—É —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤. \nüëç –ü—Ä–∏–º–µ—Ä –¥–∞—Ç—ã: 14 —Ñ–µ–≤—Ä–∞–ª—è. \n–ï—Å–ª–∏ –≤—ã –≤–≤–µ–ª–∏ –Ω–µ —Ç—É –¥–∞—Ç—É ‚Äì –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤—É—é",
            Markup.inlineKeyboard([
                // –ï—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è, —Ç–æ–≥–¥–∞ –ø–æ–ø—Ä–æ—Å–∏—Ç—å —É–∫–∞–∑–∞—Ç—å —Ç–æ—á–Ω–æ–µ –≤—Ä–µ–º—è (—ç—Ç–∞ —Ñ–∏—á–∞ –ø–æ–¥ –≤–æ–ø—Ä–æ—Å–æ–º)
                Markup.callbackButton('–°–µ–≥–æ–¥–Ω—è', '–°–µ–≥–æ–¥–Ω—è'),
                Markup.callbackButton('–ó–∞–≤—Ç—Ä–∞', '–ó–∞–≤—Ç—Ä–∞')
            ]).extra());

        (() => {
            // –†–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫–∏ –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞—Ç—ã. –≠—Ç–∏—Ö –∫–Ω–æ–ø–∫–∏ 3: "—Å–µ–≥–æ–¥–Ω—è", "–∑–∞–≤—Ç—Ä–∞" –∏ "–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å
            bot.on('callback_query', (ctx) => {
                console.log(ctx.update['callback_query'].data);
                ctx.telegram.answerCbQuery(ctx.update['callback_query'].id, "");
                // –≠—Ç–æ—Ç —Ñ—Ä–∞–≥–º–µ–Ω—Ç –∫–æ–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –µ—Å–ª–∏ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"
                if (ctx.update['callback_query'].data === "–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å") {
                    ctx.telegram.answerCbQuery(ctx.update['callback_query'].id, "");
                    ctx.telegram.deleteMessage(ctx.update['callback_query'].message.chat.id, ctx.update['callback_query'].message['message_id']);
                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞—Ç—É –∑–∞–∫–∞–∑–∞ –≤ –∞–¥–º–∏–Ω—Å–∫—É—é –≥—Ä—É–ø–ø—É
                    ctx.telegram.sendMessage(config.admin_group_id, "–ü—Ä–æ–≤–µ—Ä–∏–ª –¥–∞—Ç—É –∑–∞–∫–∞–∑–∞. –í–æ—Ç —á—Ç–æ –ø–æ–ª—É—á–∏–ª–æ—Å—å: " + orderInfo.orderDate);
                    return ctx.reply("–ò–¥–µ–º –¥–∞–ª—å—à–µ! \n –ì–ª–µ–± –≤—Å–µ-—Ä–∞–≤–Ω–æ —É–∂–µ –∑–∞–µ–±–∞–ª—Å—è ü§™");
                }
                // –≠—Ç–æ—Ç —Ñ—Ä–∞–≥–º–µ–Ω—Ç –∫–æ–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –µ—Å–ª–∏ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–°–µ–≥–æ–¥–Ω—è"
                else if (ctx.update['callback_query'].data === "–°–µ–≥–æ–¥–Ω—è") {
                    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –¥–∞—Ç—É –∑–∞–∫–∞–∑–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
                    orderInfo.orderDate = (() => {
                        const months = ['—è–Ω–≤–∞—Ä—è', '—Ñ–µ–≤—Ä–∞–ª—è', '–º–∞—Ä—Ç–∞', '–∞–ø—Ä–µ–ª—è', '–º–∞—è', '–∏—é–Ω—è', '–∏—é–ª—è', '–∞–≤–≥—É—Å—Ç–∞', '—Å–µ–Ω—Ç—è–±—Ä—è', '–æ–∫—Ç—è–±—Ä—è', '–Ω–æ—è–±—Ä—è', '–¥–µ–∫–∞–±—Ä—è'];

                        let oneDay = 0,
                            result;
                        if (arguments[0]) oneDay = 86400000;
                        let thisDate = new Date(Date.now() + oneDay);
                        let currentMonth = months[thisDate.getMonth()],
                            currentDay = thisDate.getDate().toString();
                        result = currentDay + " " + currentMonth;
                        return result;
                    })(true);
                    ctx.reply("–•–æ—Ä–æ—à–æ, –±—É–∫–µ—Ç –±—É–¥–µ—Ç –∑–∞–∫–∞–∑–∞–Ω –Ω–∞ " + orderInfo.orderDate);
                    requestTime(ctx);
                    return checkTime(ctx);
                }
                orderInfo.orderDate = (() => {
                    const months = ['—è–Ω–≤–∞—Ä—è', '—Ñ–µ–≤—Ä–∞–ª—è', '–º–∞—Ä—Ç–∞', '–∞–ø—Ä–µ–ª—è', '–º–∞—è', '–∏—é–Ω—è', '–∏—é–ª—è', '–∞–≤–≥—É—Å—Ç–∞', '—Å–µ–Ω—Ç—è–±—Ä—è', '–æ–∫—Ç—è–±—Ä—è', '–Ω–æ—è–±—Ä—è', '–¥–µ–∫–∞–±—Ä—è'];

                    let oneDay = 0,
                        result;
                    if (arguments[0]) oneDay = 86400000;
                    let thisDate = new Date(Date.now() + oneDay);
                    let currentMonth = months[thisDate.getMonth()],
                        currentDay = thisDate.getDate().toString();
                    result = currentDay + " " + currentMonth;
                    return result;
                })();
                ctx.reply("–•–æ—Ä–æ—à–æ, –±—É–∫–µ—Ç –±—É–¥–µ—Ç –∑–∞–∫–∞–∑–∞–Ω –Ω–∞ " + orderInfo.orderDate);
                requestTime(ctx);
                return checkTime(ctx);
            });
            // –†–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞—Ç—ã
            bot.on('message', (ctx) => {
                if (!ctx.message.text.match(/–∑–∞–∫–∞–∑–∞—Ç—å –±—É–∫–µ—Ç/i)) {
                    if(checkDate(ctx)) {
                        ctx.reply("–•–æ—Ä–æ—à–æ. –í–∞—à –±—É–∫–µ—Ç –±—É–¥–µ—Ç –∑–∞–∫–∞–∑–∞–Ω –Ω–∞ " + orderInfo.orderDate + ".");
                        return ctx.reply("–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É \"–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å\", —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∑–∞–∫–∞–∑ –±—É–∫–µ—Ç–∞ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥—É—é –¥–∞—Ç—É",
                            Markup.inlineKeyboard([
                                // –ï—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è, —Ç–æ–≥–¥–∞ –ø–æ–ø—Ä–æ—Å–∏—Ç—å —É–∫–∞–∑–∞—Ç—å —Ç–æ—á–Ω–æ–µ –≤—Ä–µ–º—è (—ç—Ç–∞ —Ñ–∏—á–∞ –ø–æ–¥ –≤–æ–ø—Ä–æ—Å–æ–º)
                                Markup.callbackButton('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', '–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å'),
                            ]).extra());
                    } else {
                        outputErrorMessage(ctx, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –¥–∞—Ç—É!");
                    }
                }
            });
        })();
    };

    // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
    let requestTime = (ctx) => {
        ctx.reply("–í–≤–µ–¥–∏—Ç–µ –µ—â–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è, –∫–æ–≥–¥–∞ –ø—Ä–∏–¥–µ—Ç–µ –∑–∞ –±—É–∫–µ—Ç–æ–º. \n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∑—ã–≤–∞–π—Ç–µ –≤—Ä–µ–º—è –Ω–µ —Ä–∞–Ω—å—à–µ, —á–µ–º —á–µ—Ä–µ–∑ 2 —á–∞—Å–∞ –æ—Ç –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ \n–ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞ –≤—Ä–µ–º–µ–Ω–∏: 17:30");
        console.log("–í—Ä–µ–º—è –∑–∞–ø—Ä–æ—à–µ–Ω–æ!");
    };

    let checkTime = (ctx) => {
        let checkTimeResult = false;
        bot.on('message', (ctx) => {
            console.log("–¢–∏–ø–∞ –≤—Ä–µ–º—è –±—ã–ª–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ!");
            checkTimeResult = true;
        })
        return checkTimeResult;
    };

    // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–æ–π –≤–≤–µ–¥–µ–Ω–Ω–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –¥–∞—Ç—ã
    function checkDate(ctx) {
        const scheduleDates = {
            'today': {
                matchExpression: "—Å–µ–≥–æ–¥–Ω",
                fullName: "—Å–µ–≥–æ–¥–Ω—è",
                scheduleDate() {
                    const months = ['—è–Ω–≤–∞—Ä—è', '—Ñ–µ–≤—Ä–∞–ª—è', '–º–∞—Ä—Ç–∞', '–∞–ø—Ä–µ–ª—è', '–º–∞—è', '–∏—é–Ω—è', '–∏—é–ª—è', '–∞–≤–≥—É—Å—Ç–∞', '—Å–µ–Ω—Ç—è–±—Ä—è', '–æ–∫—Ç—è–±—Ä—è', '–Ω–æ—è–±—Ä—è', '–¥–µ–∫–∞–±—Ä—è'];

                    let oneDay = 0,
                        result;
                    if (arguments[0]) oneDay = 86400000;
                    let thisDate = new Date(Date.now() + oneDay);
                    let currentMonth = months[thisDate.getMonth()],
                        currentDay = thisDate.getDate().toString();
                    result = currentDay + " " + currentMonth;
                    return result;
                },
                specifyTime: true
            },
            'tomorrow': {
                matchExpression: "–∑–∞–≤—Ç—Ä",
                fullName: "–∑–∞–≤—Ç—Ä–∞",
                scheduleDate() {
                    const months = ['—è–Ω–≤–∞—Ä—è', '—Ñ–µ–≤—Ä–∞–ª—è', '–º–∞—Ä—Ç–∞', '–∞–ø—Ä–µ–ª—è', '–º–∞—è', '–∏—é–Ω—è', '–∏—é–ª—è', '–∞–≤–≥—É—Å—Ç–∞', '—Å–µ–Ω—Ç—è–±—Ä—è', '–æ–∫—Ç—è–±—Ä—è', '–Ω–æ—è–±—Ä—è', '–¥–µ–∫–∞–±—Ä—è'];

                    let oneDay = 0,
                        result;
                    if (arguments[0]) oneDay = 86400000;
                    let thisDate = new Date(Date.now() + oneDay);
                    let currentMonth = months[thisDate.getMonth()],
                        currentDay = thisDate.getDate().toString();
                    result = currentDay + " " + currentMonth;
                    return result;
                },
                specifyTime: true
            },
            'october': {
                matchExpression: "–æ–∫—Ç",
                fullName: "–æ–∫—Ç—è–±—Ä—è",
                scheduleMonth: 10
            },
            'november': {
                matchExpression: "–Ω–æ—è",
                fullName: "–Ω–æ—è–±—Ä—è",
                scheduleMonth: 11
            },
            'december': {
                matchExpression: "–¥–µ–∫",
                fullName: "–¥–µ–∫–∞–±—Ä—è",
                scheduleMonth: 12
            },
            'january': {
                matchExpression: "—è–Ω–≤",
                fullName: "—è–Ω–≤–∞—Ä—è",
                scheduleMonth: 1
            },
            'february': {
                matchExpression: "—Ñ–µ–≤",
                fullName: "—Ñ–µ–≤—Ä–∞–ª—è",
                scheduleMonth: 2
            },
            'march': {
                matchExpression: "–º–∞—Ä—Ç",
                fullName: "–º–∞—Ä—Ç–∞",
                scheduleMonth: 3
            },
            'april': {
                matchExpression: "–∞–ø—Ä",
                fullName: "–∞–ø—Ä–µ–ª—è",
                scheduleMonth: 4
            },
            'may': {
                matchExpression: "–º–∞",
                fullName: "–º–∞—è",
                scheduleMonth: 5
            },
            'june': {
                matchExpression: "–∏—é–Ω",
                fullName: "–∏—é–Ω—è",
                scheduleMonth: 6
            },
            'july': {
                matchExpression: "–∏—é–ª",
                fullName: "–∏—é–ª—è",
                scheduleMonth: 7
            },
            'august': {
                matchExpression: "–∞–≤–≥",
                fullName: "–∞–≤–≥—É—Å—Ç–∞",
                scheduleMonth: 8
            },
            'september': {
                matchExpression: "—Å–µ–Ω",
                fullName: "—Å–µ–Ω—Ç—è–±—Ä—è",
                scheduleMonth: 9
            }
        };
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±—ã–ª–∞ –ª–∏ –∑–∞–ø—É—â–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∏—Ä—É—é—â–∞—è –∑–∞–∫–∞–∑ –±—É–∫–µ—Ç–∞
        if (!orderIsInitialised) {
            console.log("–ò–∑–Ω–∞—á–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –±—ã–ª–∞ –≤—ã–∑–≤–∞–Ω–∞");
            return;
        }
        console.log("*** –ó–∞–ø—É—â–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞—Ç—ã");

        // –í —ç—Ç–æ–º –æ–±—Ö–µ–∫—Ç–µ —Ö—Ä–∞–Ω–∏—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–∞—Ç–µ. –ï—Å–ª–∏ –æ–Ω–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏, —Ç–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        // —ç—Ç–æ—Ç –æ–±—ä–µ–∫—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ –¥—Ä—É–≥–æ–π –æ–±—ä–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å—Å—è –∫–ª–∏–µ–Ω—Ç—É –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
        let tempDateObj = {};

        // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –º–µ—Å—è—Ü–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –≥–æ–¥–∞
        let daysInMonth = (month, year) => {
            return new Date(year, month, 0).getDate();
        };

        let validateMonth = matchRegexArray => {
            matchRegexArray[1] = matchRegexArray[1].substr(0,2);

            if (matchRegexArray[1][0] === "0") matchRegexArray[1] = matchRegexArray[1].substr(1,2);
            // –≠—Ç–æ—Ç —Ñ—Ä–∞–≥–º–µ–Ω—Ç –∫–æ–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –¥–∞—Ç—É —Ç–∞–∫: "–î–î.–ú–ú"
            if (matchRegexArray.length === 2) {
                // if (matchRegexArray[1] === "12") matchRegexArray[1] = "0";
                for (let key in scheduleDates) {
                    if (+matchRegexArray[1] > 12) return false;
                    if (!scheduleDates[key].hasOwnProperty('scheduleMonth')) continue;
                    let monthRegEx = new RegExp(scheduleDates[key].scheduleMonth, 'i');
                    let foundMonthInString = matchRegexArray[1].match(monthRegEx);
                    if (foundMonthInString !== null) {
                        //matchRegexArray[1] += (matchRegexArray[1][foundMonthInString.index + 1]) ? matchRegexArray[1][foundMonthInString.index + 1] : "";
                        if (scheduleDates[key].scheduleMonth.toString().search(matchRegexArray[1]) !== -1) {
                            tempDateObj.day = +matchRegexArray[0];
                            tempDateObj.month = scheduleDates[key];
                            console.log("–ú–µ—Å—è—Ü –ø—Ä–æ–≤–µ—Ä–µ–Ω. –ü–æ–ª—É—á–∏–ª–∞—Å—å –≤–æ—Ç —Ç–∞–∫–∞—è –¥–∞—Ç–∞: " + JSON.stringify(tempDateObj.month));
                            return true;
                        }
                    }
                }
                return false;
            }
            // –í—ã—á–ª–µ–Ω—è–µ–º –º–µ—Å—è—Ü –º–∞—Å—Å–∏–≤–∞-—Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            for (let key in scheduleDates) {
                // –°–æ–∑–¥–∞–µ–º –∫—Ä–∏—Ç–µ—Ä–∏–π –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –≤ –º–∞—Å—Å–∏–≤–µ –º–µ—Å—è—Ü–µ–≤
                let monthRegEx = new RegExp(scheduleDates[key].matchExpression, 'i');
                // –í —è—á–µ–π–∫–µ –Ω–æ–º–µ—Ä 2 –ª–µ–∂–∏—Ç —Å—Ç—Ä–æ–∫–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—è—Ü–∞
                // ["25 –¥–µ–∫–∞–±—Ä—è", "25", "–¥–µ–∫–∞–±—Ä—è", index: 0, input: "25 –¥–µ–∫–∞–±—Ä—è", groups: undefined]
                if (matchRegexArray[2].search(monthRegEx) !== -1) {
                    // –ü—Ä–∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é-—Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç,
                    // —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–µ—Å—è—Ü–µ
                    tempDateObj.day = +matchRegexArray[1];
                    tempDateObj.month = scheduleDates[key];
                    break;
                }
            }
            console.log("–ú–µ—Å—è—Ü –ø—Ä–æ–≤–µ—Ä–µ–Ω. –ü–æ–ª—É—á–∏–ª–∞—Å—å –≤–æ—Ç —Ç–∞–∫–∞—è –¥–∞—Ç–∞: " + JSON.stringify(tempDateObj.month));
            return true;
        };

        let validateDay = dateObject => {
            let scheduleYear = new Date().getFullYear(),
                thisMonth = new Date().getMonth();
            if (dateObject.month.scheduleMonth < thisMonth + 1) scheduleYear++;
            console.log(scheduleYear);
            if (dateObject.day !== 0 && dateObject.day <= daysInMonth(dateObject.month.scheduleMonth, scheduleYear)) {
                console.log("–ß–∏—Å–ª–æ –º–µ—Å—è—Ü–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. –ü–æ–ª—É—á–∏–ª–∞—Å—å —Ç–∞–∫–∞—è –¥–∞—Ç–∞: " + dateObject.day + dateObject.month.fullName);
                if (scheduleYear > new Date().getFullYear())  {
                    orderInfo.orderDate = "" + tempDateObj.day + " " + tempDateObj.month.fullName + " " + scheduleYear + " –≥–æ–¥–∞";
                }
                orderInfo.orderDate = "" + tempDateObj.day + " " + tempDateObj.month.fullName;
                return true;
            } else {
                outputErrorMessage(ctx, "–í –º–µ—Å—è—Ü–µ, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –≤–≤–µ–ª–∏, –Ω–µ—Ç —á–∏—Å–ª–∞" + tempDateObj.day + "!");
                dateObject.month = undefined;
                dateObject.day = undefined;
                return false;
            }
        };

        let stringForValidation = ctx.message.text.match(/(\d+)[\s\/.,\-]?([–∞-—è—ë]+)/i);
        console.log(stringForValidation);

        // –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç —Å —Ñ–æ—Ä–º–∞—Ç–æ–º –¥–µ–Ω—å-–º–µ—Å—è—Ü, —Ç–æ–≥–¥–∞ –∏—â–µ–º –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –º–µ—Å—è—Ü–∞
        if (stringForValidation) {
            // –ï—Å–ª–∏ –º–µ—Å—è—Ü –±—ã–ª —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω, —Ç–æ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –¥–Ω—è (—á–∏—Å–ª–∞)
            let validationResult;
            validationResult = (validateMonth(stringForValidation)) ? validateDay(tempDateObj) : false;
            dateIsAlreadyChosen = true;
            return validationResult;

        }
        if (stringForValidation = ctx.message.text.match(/\d+[\s\/.,:\\\-]?\d+/i)) {
            let validationResult;
            // –ù–∞ –¥–∞–Ω–Ω–æ–º —ç—Ç–∞–ø–µ stringForValidation –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫: ["26.06"]
            // –§—É–Ω–∫—Ü–∏—è validateMonth –¥–æ–ª–∂–Ω–∞ –ø–æ–ª—É—á–∞—Ç—å –º–∞—Å—Å–∏–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, ["26", "06"])
            validationResult = validateMonth(stringForValidation[0].split(/[\s\/.,:\\\-]/)) ? validateDay(tempDateObj) : false;
            return validationResult;
            // –ú–æ–∂–µ—Ç, —Å—é–¥–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–¥–æ –≤—Å—Ç–∞–≤–ª—è—Ç—å –∏ —ç—Ç–æ —É—Å–ª–æ–≤–∏–µ –≤–æ–æ–±—â–µ –Ω–∞–¥–æ —É–¥–∞–ª–∏—Ç—å
        } else {
            // –ò–Ω–∞—á–µ –∏—â–µ–º –±—ã–ª–æ –ª–∏ –≤–≤–µ–¥–µ–Ω–æ "—Å–µ–≥–æ–¥–Ω—è" –∏–ª–∏ "–∑–∞–≤—Ç—Ä–∞"
            stringForValidation = ctx.message.text.match(/(—Å–µ–≥–æ–¥–Ω—è)?(–∑–∞–≤—Ç—Ä–∞)?/gi);
            console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª: " + stringForValidation);
            if (stringForValidation[0].toLowerCase().search(scheduleDates['today'].matchExpression) !== -1) {
                // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª "—Å–µ–≥–æ–¥–Ω—è", —Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è, –≤—ã—Å—á–∏—Ç—ã–≤–∞—é—â–∞—è
                // –¥–∞—Ç—É –¥–ª—è —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –¥–Ω—è
                orderInfo.orderDate = scheduleDates['today'].scheduleDate();
                requestTime(ctx);
                checkTime(ctx);
            } else {
                // –ò–Ω–∞—á–µ –¥–∞—Ç–∞ –≤—ã—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –¥–ª—è –∑–∞–≤—Ç—Ä–∞—à–Ω–µ–≥–æ –¥–Ω—è
                orderInfo.orderDate = scheduleDates['tomorrow'].scheduleDate();
            }
            console.log(tempDateObj);
        }
    }

    // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–∏–ø –±—É–∫–µ—Ç–∞ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –∫–∞–∫ –ø—Ä–∏–º–µ—Ä
    let chooseBouquetType = ctx => {
        let requestBouquetType = ctx => {
            return ctx.reply("–ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ç–∏–ø –±—É–∫–µ—Ç–∞ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø—Ä–∏–º–µ—Ä–æ–≤ –Ω–∏–∂–µ!", Markup.inlineKeyboard([
                // –ï—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è, —Ç–æ–≥–¥–∞ –ø–æ–ø—Ä–æ—Å–∏—Ç—å —É–∫–∞–∑–∞—Ç—å —Ç–æ—á–Ω–æ–µ –≤—Ä–µ–º—è (—ç—Ç–∞ —Ñ–∏—á–∞ –ø–æ–¥ –≤–æ–ø—Ä–æ—Å–æ–º)
                Markup.callbackButton('–°–≤–∞–¥–µ–±–Ω—ã–π', '—Å–≤–∞–¥–µ–±–Ω—ã–π'),
                Markup.callbackButton('–î–ª—è –¥–µ–≤—É—à–∫–∏', '–¥–ª—è –¥–µ–≤—É—à–∫–∏'),
            ],[Markup.callbackButton('–î–ª—è –∂–µ–Ω—ã', '–¥–ª—è –∂–µ–Ω—ã')]).extra())
        };
        requestBouquetType(ctx);
    };

    function launch(ctx) {
        orderIsInitialised = true;
        console.log("*** –ó–∞–ø—É—â–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–∫–∞–∑–∞ –±—É–∫–µ—Ç–æ–≤");
        ctx.reply("–ß—Ç–æ –∂, –¥–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º. –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –ø–∞—Ä—É –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –≥–æ—Ç–æ–≤–æ!");
        requestDate(ctx);
    }

    launch.requestDate = requestDate;
    launch.checkDate = checkDate;
    launch.chooseBouquetType = chooseBouquetType;

    global.order = launch;
})();

// –ö–û–ù–ï–¶ –§–£–ù–ö–¶–ò–ò –ó–ê–ö–ê–ó–ê –ë–£–ö–ï–¢–ê


bot.start(({ reply }) => {
    return reply('–ï—â–µ —Ä–∞–∑ –ø—Ä–∏–≤–µ—Ç! \n–Ø –±–æ—Ç –ø–æ–º–æ—â–Ω–∏–∫ —Ü–≤–µ—Ç–æ—á–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞ \"–ë–ª—é–º–µ–Ω—Ñ—Ä–∞—É\". –ü–æ–º–æ–≥—É –≤–∞–º –∑–∞–∫–∞–∑–∞—Ç—å –±—É–∫–µ—Ç –≤–∞—à–µ–π –º–µ—á—Ç—ã –∏ –ø–æ–∫–∞–∂—É —á—Ç–æ –º—ã —É–∂–µ —Å–¥–µ–ª–∞–ª–∏ –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω—á–∏–∫–µ. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –º–µ–Ω—é, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å! :)',
        Markup.keyboard([
            ['üíê –ó–∞–∫–∞–∑–∞—Ç—å –±—É–∫–µ—Ç'],
            ['–§–æ—Ç–æ–≥–∞–ª–µ—Ä–µ—è', '–ö–æ–Ω—Ç–∞–∫—Ç—ã'],
            ['–û –Ω–∞—Å', '–ú–æ—è –∫–æ—Ä–∑–∏–Ω–∞']
        ])
            .oneTime()
            .resize()
            .extra()
    );
});

bot.hears(/–ó–∞–∫–∞–∑–∞—Ç—å –±—É–∫–µ—Ç/gim, (ctx) => {
    order(ctx);
    return;
});


bot.hears('–§–æ—Ç–æ–≥–∞–ª–µ—Ä–µ—è', (ctx) => {
    ctx.replyWithMediaGroup([
        {
            'media': 'https://pp.userapi.com/c631920/v631920791/1b3ab/u5uhgBHTXTM.jpg',
            'caption': '–≠–∫—Å—Ç—Ä–∞–≤–∞–≥–∞–Ω—Ç–Ω—ã–π, –¥–ª—è —Å–º–µ–ª—ã—Ö\n' + '–í —Å–æ—Å—Ç–∞–≤–µ –±—É–∫–µ—Ç–∞: –ê–ª—å—Å—Ç—Ä–æ–º–µ—Ä–∏—è, —Ä–æ–∑–∞, —Ä—É—Å–∫—É—Å, —Å–∞–ª–∞–ª',
            'type': 'photo'
        },{
            'media': 'https://pp.userapi.com/c631920/v631920791/1b3a1/xyMMIlCkLaY.jpg',
            'caption': '–°—Ç–∏–ª—å–Ω—ã–π –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –±—É–∫–µ—Ç \n' + '–í —Å–æ—Å—Ç–∞–≤–µ –±—É–∫–µ—Ç–∞: –†–æ–∑–∞ ‚Äú–∫–∞–±–∞—Ä–µ—Ç‚Äù, —Å–µ–¥—É–º, –∞–ª—å—Å—Ç—Ä–µ–º–µ—Ä–∏—è –∂–µ–ª—Ç–∞—è –∏ –∫—Ä–∞—Å–Ω–∞—è, —Å–∞–ª–∞–ª, —Ä—É—Å–∫—É—Å',
            'type': 'photo'
        },{
            'media': 'https://pp.userapi.com/c625521/v625521791/450dc/gx5T6IXewTY.jpg',
            'caption': '–í —Å–æ—Å—Ç–∞–≤–µ –±—É–∫–µ—Ç–∞: –•—Ä–∏–∑–∞–Ω—Ç–µ–º–∞ –æ–¥–∏–Ω–æ—á–Ω–∞—è "–®–∞–º—Ä–æ–∫", —Ö—Ä–∏–∑–∞–Ω—Ç–µ–º–∞ –∫—É—Å—Ç–æ–≤–∞—è, –∞–ª—å—Å—Ç—Ä–µ–º–µ—Ä–∏—è –æ—Ä–∞–Ω–∂–µ–≤–∞—è, —Å–∞–Ω—Ç–∏–Ω–∏, —Ä—É—Å–∫—É—Å',
            'type': 'photo'
        }
    ]);
});


bot.hears('–ö–æ–Ω—Ç–∞–∫—Ç—ã', (ctx) => {
    ctx.telegram.sendMessage(ctx.chat.id, "–ó–≤–æ–Ω–∏—Ç–µ").then(function() {
        return ctx.telegram.sendContact(ctx.chat.id, '+79138201801', '–õ—é–¥–º–∏–ª–∞', '–ì–æ—Ä–∫–æ–ª—å—Ü–µ–≤–∞', Extra.notifications(false));
    }).then(function() {
        return ctx.reply(workingHours, Extra.notifications(false));
    }).then(function() {
        return ctx.reply("–ü–æ–∫–∞–∑–∞—Ç—å –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞?",
            Markup.inlineKeyboard([
                Markup.callbackButton('–ü–æ–∫–∞–∑–∞—Ç—å –∞–¥—Ä–µ—Å', '–ü–æ–∫–∞–∑–∞—Ç—å –∞–¥—Ä–µ—Å')
            ]).extra(), Extra.notifications(false)
        );
    });
});


bot.action('–ü–æ–∫–∞–∑–∞—Ç—å –∞–¥—Ä–µ—Å', (ctx) => {
    ctx.telegram.answerCbQuery(ctx.update['callback_query'].id, "–ó–∞–≥—Ä—É–∂–∞—é –∫–∞—Ä—Ç—É ü§î");
    ctx.telegram.deleteMessage(ctx.update['callback_query'].message.chat.id, ctx.update['callback_query'].message['message_id']);
    ctx.telegram.sendVenue(ctx.chat.id, 56.4766215, 84.9634409, "–ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –≤ –≥–æ—Å—Ç–∏", "–§—Ä—É–Ω–∑–µ –ø—Ä–æ—Å–ø–µ–∫—Ç, 46", Extra.notifications(false))
        .then(function() {
            return ctx.reply("–ê –µ—â–µ —É –Ω–∞—Å –µ—Å—Ç—å Instagram",
                Markup.inlineKeyboard([
                    Markup.urlButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", 'https://www.instagram.com/bf_tomsk')
                ]).extra(),Extra.notifications(false));
        });
});


bot.hears('–û –Ω–∞—Å', (ctx) => {
    ctx.replyWithSticker('CAADAgADgwADIIEVAAHe1ptG1BvPVAI');
    ctx.reply('–ë–ª–∞–±–ª–∞–±–ª–∞. –•—É–µ-–º–∞–µ');
});


bot.hears('–ú–æ—è –∫–æ—Ä–∑–∏–Ω–∞', (ctx) => {
    return ctx.reply("–î–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –í—ã –≤—Å–µ —É–≤–∏–¥–∏—Ç–µ, –∫–æ–≥–¥–∞ –ì–ª–µ–± –º–µ–Ω—è –¥–æ–¥–µ–ª–∞–µ—Ç");
})


bot.startPolling();
